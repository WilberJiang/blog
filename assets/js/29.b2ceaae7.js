(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{193:function(e,t,l){"use strict";l.r(t);var s=l(0),a=Object(s.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,t=e.$createElement,l=e._self._c||t;return l("div",{staticClass:"content"},[l("h1",{attrs:{id:"mysql"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#mysql","aria-hidden":"true"}},[e._v("#")]),e._v(" MySQL")]),e._v(" "),l("ul",[l("li",[e._v("创建表\n"),l("ul",[l("li",[e._v("数据类型\n"),l("ul",[l("li",[e._v("整数类型 int")]),e._v(" "),l("li",[e._v("浮点类型 double")]),e._v(" "),l("li",[e._v("日期类型 date/timestamp")]),e._v(" "),l("li",[e._v("字符串类型 char varchar\n"),l("ul",[l("li",[e._v("可变varchar 不可变是char")]),e._v(" "),l("li",[e._v("空间换时间")])])])])]),e._v(" "),l("li",[e._v("首先足够用，其次尽量小")])])])]),e._v(" "),l("div",{staticClass:"language- line-numbers-mode"},[l("pre",{pre:!0,attrs:{class:"language-text"}},[l("code",[e._v("    create table 表名(\n        id int,\n        name varchar(20)\n    );\n")])]),e._v(" "),l("div",{staticClass:"line-numbers-wrapper"},[l("span",{staticClass:"line-number"},[e._v("1")]),l("br"),l("span",{staticClass:"line-number"},[e._v("2")]),l("br"),l("span",{staticClass:"line-number"},[e._v("3")]),l("br"),l("span",{staticClass:"line-number"},[e._v("4")]),l("br")])]),l("pre",[l("code",[e._v("- 查看创建表的语句\n    + show create table 表名\n- 查看表的明细\n    + desc 表名\n")])]),e._v(" "),l("ul",[l("li",[l("p",[e._v("删除表")]),e._v(" "),l("ul",[l("li",[e._v("drop table 表名")])])]),e._v(" "),l("li",[l("p",[e._v("插入数据")]),e._v(" "),l("ul",[l("li",[e._v("第一种：全表字段插入\n"),l("ul",[l("li",[l("code",[e._v("insert into 表名 values (val1,val2...)")])]),e._v(" "),l("li",[e._v("插入的字段类型和"),l("em",[e._v("顺序必须")]),e._v("与表的字段"),l("em",[e._v("类型")]),e._v("与顺序保持一致,个数是针对全表字段的插入")])])]),e._v(" "),l("li",[e._v("指定表字段的插入\n"),l("ul",[l("li",[l("code",[e._v("insert into 表名 (字段1,字段2...) values (val1,val2...)")])]),e._v(" "),l("li",[e._v("插入的数据的顺序要与声明的字段名的顺序一致")]),e._v(" "),l("li",[e._v("类型也要一致，个数也要一致")])])])])]),e._v(" "),l("li",[l("p",[e._v("总结")])]),e._v(" "),l("li",[l("p",[e._v("1: 登录：")]),e._v(" "),l("ul",[l("li",[e._v("mysql -uroot -p")]),e._v(" "),l("li",[e._v("密码")])])]),e._v(" "),l("li",[l("p",[e._v("2: 查看有哪些数据库")]),e._v(" "),l("ul",[l("li",[e._v("show databases;")])])]),e._v(" "),l("li",[l("p",[e._v("3: 切换数据库")]),e._v(" "),l("ul",[l("li",[e._v("use 数据库名;")])])]),e._v(" "),l("li",[l("p",[e._v("4: show tables;")])]),e._v(" "),l("li",[l("p",[e._v("5: 查看表字段明细")]),e._v(" "),l("ul",[l("li",[e._v("desc 表名;")])])]),e._v(" "),l("li",[l("p",[e._v("6: 插入数据")]),e._v(" "),l("ul",[l("li",[l("code",[e._v("insert into 表名 (字段1,..) values (值1...)")])])])]),e._v(" "),l("li",[l("p",[e._v("更新操作")]),e._v(" "),l("ul",[l("li",[l("code",[e._v("UPDATE 表名 SET 字段1 = 表达式,[,字段2 = 表达式] [WHERE express布尔值]")])]),e._v(" "),l("li",[l("code",[e._v("update student set tmp = 20+1,sex = sex where 1=1;")])])])]),e._v(" "),l("li",[l("p",[e._v("删除操作")]),e._v(" "),l("ul",[l("li",[l("code",[e._v("DELETE FROM 表名 [,WHERE exr布尔值]")])]),e._v(" "),l("li",[l("code",[e._v("delete from student where name = '马蓉';")])])])]),e._v(" "),l("li",[l("p",[e._v("truncate和delete的区别")]),e._v(" "),l("ul",[l("li",[l("code",[e._v("truncate table 表名")]),e._v("\ndelete会一条一条的删 自增id保留\ntruncate先摧毁整张表，再创建一张和原来的表结构一模一样的表\ntruncate在效率上比delete高\ntruncate只能删除整表的数据，也就是格式化。\ntruncate会把自增id截断恢复为1")])])])]),e._v(" "),l("h2",{attrs:{id:"查询语句"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#查询语句","aria-hidden":"true"}},[e._v("#")]),e._v(" 查询语句")]),e._v(" "),l("ul",[l("li",[e._v("DISTINCT 去重，尽量不要根据* 来去重\n"),l("ul",[l("li",[l("code",[e._v("select distinct name,age from student;")])])])]),e._v(" "),l("li",[e._v("查询语句可以指定多个字段查询，也可以使用* 查询\n"),l("ul",[l("li",[e._v("在企业中，使用SQL查询* 是会拉低查询效率的 ，建议少用* 查询")])])])]),e._v(" "),l("h2",{attrs:{id:"条件查询"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#条件查询","aria-hidden":"true"}},[e._v("#")]),e._v(" 条件查询")]),e._v(" "),l("ul",[l("li",[l("code",[e._v("select * from student where math > 66.6 or math < 66.6;")])])]),e._v(" "),l("div",{staticClass:"language- line-numbers-mode"},[l("pre",{pre:!0,attrs:{class:"language-text"}},[l("code",[e._v("> < <= >= = <>    大于、小于、大于(小于等于)、不等于\nBETWEEN…AND 显示在某一区间的值\nIN(set) 显示在in列表中的值，例：in(100,200)\nLIKE ‘张pattern’ 模糊查询%\nIS NULL 判断是否为空\nAND 多个条件同时成立\nOR  多个条件任一成立\nNOT 不成立，例：WHERE NOT(salary>100)\n")])]),e._v(" "),l("div",{staticClass:"line-numbers-wrapper"},[l("span",{staticClass:"line-number"},[e._v("1")]),l("br"),l("span",{staticClass:"line-number"},[e._v("2")]),l("br"),l("span",{staticClass:"line-number"},[e._v("3")]),l("br"),l("span",{staticClass:"line-number"},[e._v("4")]),l("br"),l("span",{staticClass:"line-number"},[e._v("5")]),l("br"),l("span",{staticClass:"line-number"},[e._v("6")]),l("br"),l("span",{staticClass:"line-number"},[e._v("7")]),l("br"),l("span",{staticClass:"line-number"},[e._v("8")]),l("br")])]),l("ul",[l("li",[e._v("模糊查询\n"),l("ul",[l("li",[e._v("包含关"),l("code",[e._v("select * from student where name like '%关%';")])]),e._v(" "),l("li",[e._v("以关开头"),l("code",[e._v("select * from student where name like '关%';")])]),e._v(" "),l("li",[e._v("以关结尾"),l("code",[e._v("select * from student where name like '%关';")])])])]),e._v(" "),l("li",[e._v("判断为空\n"),l("ul",[l("li",[l("code",[e._v("select * from student where sex is not null;")])])])])]),e._v(" "),l("h2",{attrs:{id:"聚合函数"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#聚合函数","aria-hidden":"true"}},[e._v("#")]),e._v(" 聚合函数")]),e._v(" "),l("ul",[l("li",[e._v("统计数量\n"),l("ul",[l("li",[e._v("count(星号)")])])]),e._v(" "),l("li",[e._v("求和\n"),l("ul",[l("li",[e._v("sum(math+english+chinese)")])])]),e._v(" "),l("li",[e._v("平均值\n"),l("ul",[l("li",[e._v("avg(math+english+chinese)")])])]),e._v(" "),l("li",[e._v("找最值\n"),l("ul",[l("li",[e._v("max(列)/min(列)/max(math+english+chinese)")])])])]),e._v(" "),l("h2",{attrs:{id:"排序-order-by"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#排序-order-by","aria-hidden":"true"}},[e._v("#")]),e._v(" 排序(order by)")]),e._v(" "),l("ul",[l("li",[l("code",[e._v("select * from student where 1= 1 order by chinese desc,math desc,english desc;")])])]),e._v(" "),l("h2",{attrs:{id:"分组-group-by"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#分组-group-by","aria-hidden":"true"}},[e._v("#")]),e._v(" 分组(group by)")]),e._v(" "),l("ul",[l("li",[e._v("如果聚合函数只有一行，需要对于不同的集合做聚合运算就加上分组\n"),l("ul",[l("li",[l("code",[e._v("select zu,count(*) from student group by zu;")])])])])]),e._v(" "),l("h2",{attrs:{id:"分页-limit"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#分页-limit","aria-hidden":"true"}},[e._v("#")]),e._v(" 分页(limit)")]),e._v(" "),l("div",{staticClass:"language- line-numbers-mode"},[l("pre",{pre:!0,attrs:{class:"language-text"}},[l("code",[e._v("    - `select * from student limit 10,5;`\n    - limit offset(起始位置) count(显示多少个)\n    - limit 使用的时候，offset从0开始\n    - 豆瓣： offset （当前页-1）* 页显示数\n        + count ： 页显示数\n")])]),e._v(" "),l("div",{staticClass:"line-numbers-wrapper"},[l("span",{staticClass:"line-number"},[e._v("1")]),l("br"),l("span",{staticClass:"line-number"},[e._v("2")]),l("br"),l("span",{staticClass:"line-number"},[e._v("3")]),l("br"),l("span",{staticClass:"line-number"},[e._v("4")]),l("br"),l("span",{staticClass:"line-number"},[e._v("5")]),l("br")])]),l("h2",{attrs:{id:"默认端口"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#默认端口","aria-hidden":"true"}},[e._v("#")]),e._v(" 默认端口")]),e._v(" "),l("ul",[l("li",[e._v("oracle：1521")]),e._v(" "),l("li",[e._v("sqlserver ：1433")]),e._v(" "),l("li",[e._v("mysql ：3306")]),e._v(" "),l("li",[e._v("mongodb ：27017")]),e._v(" "),l("li",[e._v("DB2 ： 50000")])])])}],!1,null,null,null);t.default=a.exports}}]);